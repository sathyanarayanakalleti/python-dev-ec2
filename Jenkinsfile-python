pipeline {
    agent { label 'trynode' }
    environment {
         EMAIL_TO = 'athira.c@reflectionsinfos.com,kalleti.narayana@reflectionsinfos.com'
        
    }

    
    stages {
        stage('Clean Project') {
          steps {
            script {
              def remote = [:]
                remote.name = "python-dev"
                remote.host = "18.234.194.30"
                remote.allowAnyHosts = true
               withCredentials([usernamePassword(credentialsId: 'jai-credentials', passwordVariable: 'password', usernameVariable: 'userName')]) {
                remote.user = userName
                remote.password = password
                     
            
           }
         }
       }
     }
     stage('Build Project Files') {
      steps {
      script {
         
        sh "cd /var/lib/jenkins/workspace/;tar -cf /tmp/python-dev.tar.gz python-dev/"
         sh "scp  /tmp/python-dev.tar.gz athira@18.234.194.30:/tmp/;rm -rf /tmp/python-dev.tar.gz"
         

	  
          }
        }
      }

    stage('Deploy Project') {
      steps {
        script {
          def remote = [:]
          remote.name = "python-dev"
          remote.host = "18.234.194.30"
          remote.allowAnyHosts = true
          withCredentials([usernamePassword(credentialsId: 'jai-credentials', passwordVariable: 'password', usernameVariable: 'userName')]) {
            remote.user = userName
            remote.password = password
            sshCommand remote: remote, command:'cd /tmp/;tar -xf python-dev.tar.gz'
            sshCommand remote: remote, command:'cd /tmp/python-dev/; sudo pip install -r requirements.txt'
            //sshCommand remote: remote, command:'cd /tmp/python-dev/; pm2 start app.py -f'
            sshCommand remote: remote, command:'cd /tmp/python-dev/;sudo cp -a /tmp/python-dev/. /var/www/html/tech-stack/python-dev'

            sshCommand remote: remote, command:'cd /tmp/; sudo rm -rf python-dev*'
            

          }
        }
      }
    }



    }


post {
        failure {
            emailext body: 'Environment:python-dev  \n\n Job Name: ${JOB_NAME} \n Build Number: ${BUILD_NUMBER} \nChanges: ${CHANGES}\n${CAUSE}\n\nCheck console output at $BUILD_URL to view the results. \n\n --------------------Build Log------------------------------ \n${BUILD_LOG, maxLines=100, escapeHtml=false}\n --------------------------------------------------------- \n', 
                    to: "${EMAIL_TO}", from: 'Jenkins',
                    subject: 'Build Failed in Jenkins: $PROJECT_NAME - #$BUILD_NUMBER'
        }

        success {
            emailext body: 'Environment: python-dev \n\n Job Name: ${JOB_NAME} \n Build Number: ${BUILD_NUMBER} \nChanges: ${CHANGES}\n ${CAUSE}\n\nCheck console output at $BUILD_URL to view the results. \n\n ---------------------Build Log----------------------------- \n${BUILD_LOG, maxLines=100, escapeHtml=false}\n ----------------------------------------------------------------- \n', 
                    to: "${EMAIL_TO}", from: 'Jenkins',
                    subject: 'Build Success in Jenkins: $PROJECT_NAME - #$BUILD_NUMBER'
        }
        unstable {
            emailext body: 'Environment: python-dev \n\n Job Name: ${JOB_NAME} \n Build Number: ${BUILD_NUMBER} \nChanges: ${CHANGES}\n ${CAUSE}\n\nCheck console output at $BUILD_URL to view the results. \n\n ${CHANGES} \n\n ---------------------Build Log----------------------------- \n${BUILD_LOG, maxLines=100, escapeHtml=false}\n ----------------------------------------------------- \n', 
                    to: "${EMAIL_TO}", from: 'Jenkins',
                    subject: 'Build Unstable in Jenkins: $PROJECT_NAME - #$BUILD_NUMBER'
        }
        
    }
}
 
